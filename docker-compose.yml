version: '3.8'

services:
  sql-database1:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sql-database1
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: Ethernal123
    ports:
      - "1433:1433"
    networks:
      - my-network
    volumes:
      - ./core/DB/scripts/:/docker-entrypoint-initdb/scripts/
    command: >
      /bin/bash -c " /opt/mssql/bin/sqlservr & sleep 30 &&  /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P Ethernal123 -i /docker-entrypoint-initdb/scripts/2023.10.10_CreateBISdb.sql &&  /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P Ethernal123 -i /docker-entrypoint-initdb/scripts/2023.10.10_InsertData.sql &&  /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P Ethernal123 -i /docker-entrypoint-initdb/scripts/2024.04.24_\(1\)_CreateBankTypeTable.sql &&  /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P Ethernal123 -i /docker-entrypoint-initdb/scripts/2024.04.24_\(2\)_AlterBankTable\(AddColumn\).sql &&  /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P Ethernal123 -i /docker-entrypoint-initdb/scripts/2024.04.25_\(1\)_InsertIntoBankTable.sql &&  /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P Ethernal123 -i /docker-entrypoint-initdb/scripts/2024.04.25_\(2\)_InsertIntoBankEmployee.sql &&  wait "
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P Ethernal123 -Q \"IF EXISTS (SELECT name FROM sys.databases WHERE name = 'BIS') SELECT 1 ELSE SELECT 0\" | grep -q 1"
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  app1:
    build:
      context: .
      dockerfile: image/Dockerfile
      args:
        - DNS_NAME=app1
    container_name: app1
    environment:
      - DB_ADDRESS=sql-database1
      - DB_PORT=1433
      - DB_NAME=BIS
      - DB_PASSWORD=Ethernal123
      - SERVER_PORT=4000
      - BENEFICIARY_BANK_URL=app2:4000
      - P2P_NODE_URL=p2pmock:5000
      - GPJC_API=app1
    ports:
      - "4001:4000"
    depends_on:
      sql-database1:
        condition: service_healthy
    networks:
      - my-network

  sql-database2:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sql-database2
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: Ethernal123
    ports:
      - "1434:1433"
    networks:
      - my-network
    volumes:
      - ./core/DB/scripts/:/docker-entrypoint-initdb/scripts/
    command: >
      /bin/bash -c " /opt/mssql/bin/sqlservr & sleep 30 &&  /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P Ethernal123 -i /docker-entrypoint-initdb/scripts/2023.10.10_CreateBISdb.sql &&  /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P Ethernal123 -i /docker-entrypoint-initdb/scripts/2023.10.10_InsertData.sql &&  /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P Ethernal123 -i /docker-entrypoint-initdb/scripts/2024.04.24_\(1\)_CreateBankTypeTable.sql &&  /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P Ethernal123 -i /docker-entrypoint-initdb/scripts/2024.04.24_\(2\)_AlterBankTable\(AddColumn\).sql &&  /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P Ethernal123 -i /docker-entrypoint-initdb/scripts/2024.04.25_\(1\)_InsertIntoBankTable.sql &&  /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P Ethernal123 -i /docker-entrypoint-initdb/scripts/2024.04.25_\(2\)_InsertIntoBankEmployee.sql &&  wait "
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P Ethernal123 -Q \"IF EXISTS (SELECT name FROM sys.databases WHERE name = 'BIS') SELECT 1 ELSE SELECT 0\" | grep -q 1"
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  app2:
    build:
      context: .
      dockerfile: image/Dockerfile
      args:
        - DNS_NAME=app2
    container_name: app2
    environment:
      - DB_ADDRESS=sql-database2
      - DB_PORT=1433
      - DB_NAME=BIS
      - DB_PASSWORD=Ethernal123
      - SERVER_PORT=4000
      - BENEFICIARY_BANK_URL=app1:4000
      - P2P_NODE_URL=p2pmock:5000
      - GPJC_API=app2
    ports:
      - "4002:4000"
    depends_on:
      sql-database2:
        condition: service_healthy
    networks:
      - my-network

  p2pmock:
    build:
      context: ./p2pmock
    container_name: p2pmock
    ports:
      - "5000:5000"
    networks:
      - my-network

networks:
  my-network:
